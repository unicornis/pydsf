# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from ..exceptions import DSFServiceError


def parse_response(response):
    """
    Parse a DSF response.

    Known error codes:
    1: No person found with this input
    2: Malformed request, all mandatory fields not filled in, etc.
    3: Access is temporarily disabled, most likely due to too many requests performed in a short
        time span (limit is 10 requests per minute) - Does not apply to the Mass Lookup service.
    4: Too many requests have been performed. Next request will yield error code 3.

    Args:
        response (unknown): The response generated by SUDS after a successful request.

    Returns:
        Result of request or None

    Raises:
        WebServiceError: If there was a problem processing the request for some reason.
    """
    status_code = response[0]  # HTTP status code
    result = response[1]

    if status_code == 200:
        if hasattr(result, "RESULT"):  # This would mean that there is an actual valid result
            return result.RESULT

        if hasattr(result, "MESSAGE"):  # This would mean that there is an error message
            error_code = result.MESSAGE.CODE
            error_summary = result.MESSAGE.SUMMARY

            if error_code == "1":
                return None
            else:
                err_msg = "{error_code}: {error_summary}".format(error_code=error_code,
                                                                 error_summary=error_summary)
                raise DSFServiceError(err_msg)
    else:
        faultstring = result.faultstring
        error_msg = result.detail.feil.feilmelding

        error = "{faultstring}: {detail}".format(faultstring=faultstring, detail=error_msg)
        raise DSFServiceError(error)
