# -*- coding: utf-8 -*-from __future__ import unicode_literals

from pydsf.config import INPUT_FIELDS, OUTPUT_FIELDS


def translate_output_fields(suds_response):
    """
    Translate all possible fields from the response into more readable descriptions.

    Args:
        suds_response: The response generated by SUDS after a successful request.

    Returns:
        response: A new dict with english keys, and values from the response
    """

    fields = OUTPUT_FIELDS

    response = dict()

    for item in suds_response.HOV:
        key, value = item
        if value:
            value = unicode(value)
            if value.isdigit() and int(value[0]) > 0:  # This could be regex, but meh.
                value = int(value)
            else:
                value = value.title()
        else:
            value = None
        response.update({fields[key]: value}) if key in fields else response.update({key: value})

    return response


def translate_input_fields(**input_):
    """
    Translate from english input fields to DSF input fields.

    Args:
        **input_: All the fields you wish to translate

    Returns:
        translated: A new dict with keys matching DSF keys, and values matching the input given

    Raises:
        KeyError: If a key in input is not in the recognized list of acceptable key (and as such
            can't be used)
    """
    fields = INPUT_FIELDS
    translated = {}

    for key, value in input_.iteritems():
        input_key = fields.get(key)
        if not input_key:
            raise ValueError("{} is not a valid input field/key.".format(key))

        translated.update({input_key: unicode(value)})

    return translated
